
application {
  config {
 	applicationType monolith,
    baseName jhipsterSampleApplication,
    packageName ch.qfs.sample,
    serverPort 8080,
    serviceDiscoveryType eureka,
    authenticationType oauth2,
    cacheProvider ehcache,
    enableHibernateCache true,
    websocket spring-websocket,
    databaseType sql,
    devDatabaseType h2Disk,
    prodDatabaseType postgresql,
    searchEngine elasticsearch,
    enableSwaggerCodegen true,
    messageBroker kafka,
    clientPackageManager npm,
    testFrameworks [gatling, cucumber, protractor],
    enableTranslation true,
    nativeLanguage en,
    languages [en, de],
    clientFramework react,
    jhiPrefix jhi,
    skipUserManagement true,
  }
  entities *
}

enum CategoryStatus {
    AVAILABLE, RESTRICTED, DISABLED
}

entity Category {
    description String required,
    sortOrder Integer,
    dateAdded LocalDate,
    dateModified LocalDate,
    status CategoryStatus
}

entity Product {
    title String required,
    keywords String,
    description String,
    rating Integer,
    dateAdded LocalDate,
    dateModified LocalDate
}

entity Customer {
	firstName String,
    lastName String,
    email String,
    telephone String
}

entity Address {
    address1 String,
    address2 String,
    city String,
    postcode String required maxlength(10),
    country String required maxlength(2)
}

entity WishList {
	title String required,
    restricted Boolean
}

relationship OneToMany {
    Customer{wishList(title)} to WishList{customer},
    WishList{product(title)} to Product{wishList},
    Customer{address} to Address{customer}
}

relationship ManyToOne {
	Category{parent} to Category
}

relationship ManyToMany {
	Category{product(title)} to Product{category}
}

paginate Customer, Product, Category with pagination
paginate Address with pagination
paginate Product with infinite-scroll

service Category with serviceClass
    